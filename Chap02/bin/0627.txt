char : 작은따옴표('')로 감쌈, 문자

String : 큰따옴표("")로 감쌈, 문자열

이스케이프 문자(escape)
 - 문자열 내부에 역슬래시(\)가 붙은 문자를 사용할 때 사용
 - 특정 문자를 포함시키거나, 문자열의 출력을 제어할 수 있음
  ex) String str1 = "\"번호\"";  => "번호"
      String str2 = "번호\t이름";	=> 번호	이름
      String str3 = "번호\n이름";	=> 번호
      							   이름
---------------------------------------------------
실수 타입
 - float(4byte, 약 7자리), double(8byte, 약 15자리)

실수 리터럴
 - 소스코드에서 소수점 있는 리터럴
 - 알파벳 e 또는 E가 포함된 숫자 리터럴

ex)	  5e2 	  =    5 x 10² = 500.0
	  
	실수 리터럴				  실수
	
	 0.12E-2  =   5 x 10-² = 0.0012
	 
* double 타입이 float 타입보다 2배 가량 정밀도가 높아 정확한 데이터 저장 가능
  -> 특별한 이유가 없는 한 실수 리터럴을 저장할 때에는 double 타입이 좋음
* 자바는 실수 리터럴을 기본적으로 double 타입으로 해석
* float 타입으로 저장할 경우 : 리터럴 뒤 f 또는 F 붙여 표시
ex) float var = 3E6F;

-------------------------------------------------------
논리 타입
 - 참과 거짓을 의미하는 논리 리터럴로 true와 false 사용
 - 논리 리터럴은 1byte 크기의 boolean 타입 변수에 저장 가능
	 
--------------------------------------------------------

자동 타입 변환(promotion)
 - 자동으로 타입 변환이 일어나는 것을 의미
 - 자동 타입 변환은 값의 허용 범위가 작은 타입이 큰 타입으로 저장될 경우 발생
ex) long = int;	(가능)
	int = long;	(불가능)
	
* 피 연산자 중 하나가 long 타입이면 다른 피연산자는 long 타입으로 자동 변환
	
강제 타입 변환(casting)
 - 큰 허용 범위 타입을 작은 허용 범위 타입으로 강제로 나누어 한 조각만 저장
 - 캐스팅 연산자 괄호() 사용 : 괄호 안이 나누는 단위
ex) int intValue = 10;
	byte byteValue = (byte) intValue;	// 강제 타입 변환
	
	
 