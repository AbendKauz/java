- 기본 API 클래스
	- java.lang 패키지
		- 자바 프로그램의 기본적인 클래스를 담은 패키지
		-- 해당 클래스와 인터페이스는 import없이 사용 가능함
	클래스		용도
	objcet		자바클래스의 최상위 클래스로 사용
	System		표준입력장치로부터 데이터를 입력받을때
				표준출력장치로 출력할 때
				자바 가상 기계를 종료할 때
				쓰레기 수집기를 실행 요청할 때
	Class		클래스를 메모리로 로딩할 때
	String		문자열을 저장하고 여러 정보를 얻을 때
	Math		수학 함수를 이용할 때
	
	- 자바 API(Application Programming Interface)
		- 프로그램 개발에 자주 사용되는 자바에서 제공하는 클래스 및 인터페이스 모음
		=> 자바 라이브러리
		-- API 도큐먼트로 원하는 API를 쉽게 찾아 이용할 수 있으며 사용방법을 확인할 수 있음
		(https://docs.oracle.com/en/java/javase/11/docs/api/)
	
		- API 도큐먼트에서 클래스 페이지 읽는 법
			- 링크가 있다면 해당 멤버가 있다는 뜻
					없다면 해당 멤버가 없다는 뜻
			* SUMMARY	: 클래스 내에 선언된 멤버가 어떤것들이 있는지 알려줌
			* NESTED	: 중첩클래스 또는 중첩인터페이스
			* FIELD		: 필드
			* CONSTR	: 생성자
			* METHOD	: 메소드
	
		- OBJECT 클래스
			- 자바의 최상위 부모 클래스
			* 객체비교(equals())
				- 매개타입은 object로, 모든 객체가 매개값으로 대입될 수 있음
				-- Object 클래스의 equals() 메소드는 비교연산자인 == 와 동일한 결과 리턴
				
				* equals()메소드를 재정의하는 경우
					- 두 객체가 필드값이 동등객체인지 비교하기 위해
					- 두 객체의 필드가 모두 같으면 true, 아니면 false 리턴
					-- 매개값이 기준 객체와 동일 타입 객체인지 먼저 확인이 필요함
	
		- 객체 해시코드(hashCode())
			- 객체를 식별하는 하나의 정수값
			- Object 클래스의 객체 해시코드 메소드는 객체 메모리 번지를 이용하여
				해시코드를 만들어 리턴
			-- 객체마다 다른 값을 가짐
	
		- 객체 문자정보(toString())
			- Object 클래스의 toString() 메소드는 객체의 문자 정보 리턴
			-- '클래스이름@16진수해시코드' 로 구성된 문자정보
			-> Object 하위클래스는 toString()메소드를 재정의하여
				간결하고 유익한 정보를 리턴하도록 되어있음
			ex) java.util 패키지의 Date클래스
				-> toString()메소드를 재정의하여 현재 시스템의 날짜와 시간 정보를 리턴
				java.util 패키지의 String클래스
				-> toString()메소드를 재정의하여 저장하고 있는 문자열 리턴
	
		- System 클래스
			- 모든 필드와 메소드는 정적필드 및 메소드로 구성됨
			- 프로그램 종료(exit())
				- exit() 메소드를 호출하여 JVM을 강제 종료
				-- exit() 메소드가 지정하는 int 매개값을 종료상태값이라 함
					-> 일반적으로 정상종료일 경우 매개값을 0으로 줌
		
		- 현재 시간 읽기
			- currentTimeMillis() : 1/10³ 단위 long값 리턴
			- nanoTime() : 1/10의 9승 단위 long값 리턴
	
		- Class 클래스
			- 자바는 클래스와 인터페이스의 메타 데이터를 Class 클래스로 관리
				* 메타 데이터 : 타입 이름 및 파일 경로 정보, 필드 정보, 생성자 정보, 메소드 정보 등
			- Class객체 얻기(getClass(), forName())_3가지 방법
				* 클래스로부터 얻는 방법
					1. Class clazz = 클래스이름.class;
					2. Class clazz = Class.forName("패키지...클래스이름");
				* 객체로부터 얻는 방법
					3. Class clazz = 참조변수.getClass();
	
		- 클래스 경로를 활용하여 리소스 절대 경로 얻기
			- Class 객체는 해당 클래스의 파일 경로 정보를 가지고 있어
				이 경로를 활용해 다른 리소스 파일의 경로를 얻을 수 있음
	
		- String 생성자
			- 자바의 문자열은 java.lang 패키지의 String 클래스의 인스턴스로 관리
			- 소스상에서 문자열 리터럴은 String 객체로 자동 생성되지만,
				다양한 생성자를 이용해서 직접 String 객체를 생성할 수도 있음
			
		* 자주 사용하는 생성자
			- 배열 전체를 String 객체로 생성
			ex) String str = new String(byte[] bytes);
			- 지정한 문자셋으로 디코딩
			ex) String str = new String(byte[] bytes, String charsetName);
			
			- 배열의 offset 인덱스 위치부터 length만큼 String 객체로 생성
			ex) String str = new String(byte[] bytes, int offset, int length); 
			- 지정한 문자셋으로 디코딩	
			ex) String str = new String(byte[] bytes, int offset, int length, String charsetName);
		