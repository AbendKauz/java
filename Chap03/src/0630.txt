연산자(operator)
 - 연산에 사용되는 표시나 기호

피연산자(operand)
 - 연산자와 함께 연산되는 데이터
 
연산식(expression)
 - 연산자와 피연산자를 사용하여 연산과정을 기술한 것


        연산자
          ↑
ex) x     +     y
    ┗-----┬-----┛
        피연산자

연산식의 우선순위
 : 단항 -> 이항 -> 삼항
 : 산술(+, -, *, /) -> 비교(==, !=, >, <) -> 논리(!, &, ||) -> 대입(=, +=, -=)
 - 우선순위가 같은 연산자는 왼쪽에서 오른쪽 방향으로 수행
 - 최우선순위로 주고 싶을 때 : ()로 묶어야 함
 -- 예외 : 대입연산자
 
연산의 방향
  : 일반적으로는 왼쪽에서 오른쪽으로
	-- 단항, 부호, 대입 (오른쪽에서 왼쪽으로)
 
---------------------------------------------------------------------------

- 단항 연산자 : 피연산자가 하나 (부호, 증감 연산자)
 * 부호 연산자
 	- 양수 및 음수를 표시하는 것 (+, -)
 	=> boolean타입과 char타입을 제외한 기본타입에 사용
 * 증감 연산자
 	· 전위증감연산자
		++피연산자 : 전위증가연산자	- 피연산자의 값을 1 증가시킨 후 연산 수행
		--피연산자 : 전위감소연산자	- 피연산자의 값을 1 감소시킨 후 연산 수행
	· 후위증감연산자
		피연산자++ : 후위증가연산자	- 연산 수행 후 피연산자의 값을 1 증가시킴
		피연산자-- : 후위감소연산자	- 연산 수행 후 피연산자의 값을 1 감소시킴
 * 논리 부정 연산자 (!)
 	- true -> false로, false -> true로 변경

- 이항 연산자 : 피연산자가 2개 (산술, 비교, 논리 연산자)
 * 산술 연산자
	- 연산 작업을 수행하는 것(+, -, *, /, %)
	-> 피연산자가 byte, short, char 타입 => int타입으로 변환
	-> 피연산자가 정수타입 + long타입 => long타입으로 변환
	-> 피연산자가 실수타입 => 허용범위가 큰 실수타입으로 변환
