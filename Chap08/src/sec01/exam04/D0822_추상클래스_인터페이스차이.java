package sec01.exam04;

public class D0822_추상클래스_인터페이스차이 {

	public static void main(String[] args) {

		// * 추상클래스 abstract / extends
		// -> 추상메소드를 하나라도 가지는 클래스라면 -> 추상클래스로 만듬
		// : 추상메소드는 자식클래스에서 반드시 재정의 해야함
		// -> 객체를 new 연산자로 직접 생성 불가(부모클래스로서의 역할)
		// -> 다중 상속이 불가

		// * 인터페이스 interface / implement
		// -> 상수, 추상메소드 만을 가지는 클래스
		// : 이를 구현하는 클래스는 인터페이스의 모든 메소드를 재정의 해야함
		// -> 다중 상속이 가능

		// 추상클래스 | 인터페이스
		// ________________________|___________________________
		// 1. 다중 상속이 불가능 | 다중 상속이 가능
		// 2. 일반메소드, 추상메소드 | 상수, 추상메소드만 사용이 가능
		// 일반변수, 생성자 등 |
		// 3. 상속받는 클래스는 | 상속받는 클래스는 반드시
		// 추상메소드만 구현해도 됨 | 모든 메소드를 구현해야 함
		// 4. Extends 사용 | implements 사용

		// 공통점 : 추상메소드 선언이 가능
		// 자신을 객체로 선언이 불가능(new연산자로 객체 생성 불가)

	}

}
