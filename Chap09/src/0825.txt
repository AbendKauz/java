	- 중첩 인터페이스
			- 클래스의 멤버로 선언된 인터페이스
			-- 해당 클래스와 긴밀한 관계를 맺는 구현 클래스를 만들기 위함
		ex)
		class A {
			[static] interface I { ┐
				void method();     ├ 중첩 인터페이스
			}                      ┘
		}
			=> 인스턴스 멤버 인터페이스와 정적 멤버 인터페이스 모두 가능함
			
			* 중첩 인터페이스 사용 용도
				-> UI 프로그래밍에서 이벤트를 처리할 목적으로 사용됨
- 익명(anonymous)객체
	- 이름이 없는 객체
	-- 어떤 클래스를 상속하거나 인터페이스를 구현하여야 함
	-> 재사용하지 않을 목적으로 생성
	
	- 익명 자식 객체 생성
		- 필드를 선언할 때 초기값으로 익명 자식 객체를 생성하여 대입
		- 메소드 내에서 로컬 변수 선언 시 초기값으로 익명 자식 객체를 생성하여 대입
		- 메소드의 매개변수가 부모타입일 경우 메소드를 호출하는 코드에서
			익명 자식 객체를 생성하여 매개값으로 대입
	
		* 익명 자식 객체에서 다시 정의된 필드와 메서드는
			익명 자식 객체 내부에서만 사용 가능함
	
	- 익명 구현 객체 생성
		- 구현 클래스가 재사용되지 않고 특정 위치에서만 사용되는 경우 생성하여 사용
	[기본형]
	인터페이스 [필드|변수] = new 인터페이스(){
		// 인터페이스에 선언된 추상 메소드의 실체 메소드 선언
		// 필드
		// 메소드
	}
	