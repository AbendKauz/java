- 상속 (inheritance)
	- 부모(상위) 클래스의 멤버를 자식(하위) 클래스에게 물려주는 것
	-> 이미 개발된 클래스를 재사용
	
	-- 부모 클래스의 한번의 수정으로 모든 자식 클래스까지 수정되는 효과가 있어
		유지보수 시간이 줄어듬
	
	- 클래스 상속
		- 자식 클래스 선언 시 부모 클래스 선택
		-- extends 뒤에 부모 클래스 기술
	[모양]
	class 자식클래스 extends 부모클래스{
		// 필드
		// 생성자
		// 메소드
	}
	
	- 상속의 특징
		- 여러개의 부모 클래스를 상속할 수 없음
		- 부모클래스에서 private 접근제한을 갖는 필드와 메소드는 상속대상에서 제외됨
		- 부모와 자식클래스가 다른 패키지에 존재할 경우 default 접근제한된 필드와 메소드 역시 제외됨
	
	- 부모 생성자 호출
		- 자식 객체를 생성할 때 부모객체가 먼저 생성되고 그 다음 자식 객체가 생성됨
		-- 자식 생성자의 맨 첫줄에서 부모 생성자가 호출됨
		
		ex) public DmbCellPhone(){
				super();	// 부모생성자의 기본생성자 호출
			}
			
		-- 명시적으로 부모 생성자를 호출하려는 경우
		 ->	자식클래스( 매개변수선언, ... ){
				super( 매개값, ... );
				...
			}
	
	- 메소드 재정의(오버라이딩 / Overriding)
		- 부모 클래스의 메소드가 자식 클래스에서 사용하기에 부적합할 경우
		 자식 클래스에서 수정하여 사용
		
		- 메소드 재정의 방법
			- 부모 메소드와 동일한 시그니처(리턴타입, 메소드 이름, 매개변수 목록)를 가져야 함
			- 접근제한을 더 강하게 재정의 할 수 없음
			- 새로운 예외를 throws 할 수 없음
			
		- 메소드가 재정의 될 경우 부모 객체의 메소드가 숨겨지며,
			자식 객체에서 메소드를 호출하면 재정의된 자식 메소드가 호출됨
		
		
		