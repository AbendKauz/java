- 생성자(constructor)
	- new 연산자로 호출되는 중괄호 블록
	-- 객체 생성 시 초기화 담당
	-- 모든 클래스에 반드시 하나 이상 존재
		-> 메소드와 비슷한 모양이지만 리턴타입이 없고 클래스이름과 동일함
	
클래스(매개변수선언,...){	──┐
	// 객체의 초기화 코드     ├─ 생성자 블록
}                       ──┘
	
	- 객체 초기화
		- 필드를 초기화하거나 메소드를 호출해서 객체를 사용할 준비를 하는 것
	
	- 기본생성자(default constructor)
		- 모든 클래스는 생성자가 반드시 존재하며, 생성자를 하나 이상 가질 수 있음
 [구조]
[public] 클래스(){ }
	
	- 생성자의 필드 초기화
		- 객체 생성 후 초기값 변경 가능
		-- 너무 짧으면 코드의 가독성이 좋지 않음
		--> 필드 이름과 유사하거나 동일한 이름 사용 권장
		
		* 필드와 매개변수 이름이 동일할 때
			- 생성자 내부에서 해당 핅드에 접근할 수 없음
				-> this.필드 로 표현
	
	* 생성자 오버로딩
		- 생성자를 두 개 이상 구현
			(매개변수가 다른 동일한 이름의 생성자를 여러 개 선언)
		-- 외부에서 제공되는 다양한 데이터를 사용하여 객체화 하기 위해 사용

public class 클래스{
	클래스([타입 매개변수, ...]){
		...
	}
	클래스([타입 매개변수, ...]){
		...
	}
}
		-- 매개변수의 타입, 개수, 선언된 순서
			: 매개변수 이름만 바꾸는 것은 생성자 오버로딩이 아님
	
	
	
	