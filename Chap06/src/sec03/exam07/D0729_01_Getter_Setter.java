package sec03.exam07;

public class D0729_01_Getter_Setter {

	public static void main(String[] args) {

		// 접근제한자
		// : 접근을 제한하기 위해 사용
		// -> 클래스를 다른 패키지에서 사용하지 못하도록 보호
		// / 막아야 하는 경우

		// public : 외부클래스가 자유롭게 사용할 수 있도록 함
		// protected : 같은 패키지 또는 자식 클래스에서만 사용할 수 있도록 함
		// private : 개인적인 // 외부에서 사용할 수 없도록 제한함

		// 위 3가지 접근제한자가 적용되지 않으면 ==> default 접근제한을 가짐
		// default : 같은 패키지에 소속된 클래스에서만 사용가능

		// * 멤버변수(필드)를 지정할 때 private 접근제한을 거는 경우가 많음
		// ==> 캡슐화를 위해
		// 객체의 필드와 메소드를 하나로 묶고, 실제 구현내용을 감추는 것(정보은닉)
		// -> 외부의 잘못된 사용으로 객체가 손상되지 않도록 하기 위함

		// 장점 :
		// - 외부에서 멤버를 실수로 사용하지 못하도록 보호

		// Getter, Setter 메소드
		// private -> 객체의 필드(멤버변수)를 객체 외부에서 직접적으로 접근하는 것을 막음
		// => 외부에서 마음대로 변경할 경우 객체의 무결성(결점이 없는 성질)이 깨질 수 있음
		// ex) 자동차의 속력 -> 음수가 될 수 없는데, 외부에서 음수로 변경하면 객체의 무결성이 깨짐

		// Getter, Setter 메소드를 통해 필드를 변경, 값을 가져오는 방법을 선호함
		// -> 필드는 외부에서 접근 못하도록 막고
		// 메소드는 공개해서 외부에서 메소드를 통해 필드에 접근하도록 유도
		// (매개값을 검증해서 유효한 값만 객체의 필드로 저장할 수 있도록 하기 때문)

	}

}
