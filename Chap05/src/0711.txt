참조 타입
	- 기본타입
		: 정수, 실수, 문자, 논리타입
	- 참조타입
		: 배열타입, 열거타입, 클래스, 인터페이스
	
	-- 기본타입 변수와 참조타입 변수의 차이점
		- 기본타입 변수
		ex) int age = 25;
			double price = 100.5;
			
		- 참조타입 변수
		ex) String name = "이름";
			String hobby = "취미";
		
	 [스택영역]		 [힙 영역]
  ┌─────────────┐  ┌─────────────┐
  |  참조타입변수  |  | ┌String객체┐ |	
  | name   100  |  | |         | |	
  | hobby  200  |  | |   이름   | |	
  |             |  | └─────────┘ |	
  |  기본타입변수  |  | ┌String객체┐ |	
  | price 100.5 |  | |         | |	
  | age   25    |  | |   취미   | |	
  |             |  | └─────────┘ |
  └─────────────┘  └─────────────┘
  
  - 메모리 사용 영역
  	- 메소드 영역
  		: 클래스별로 분류해 저장
  			- 정적필드(static field)
  			- 상수(constant)
  			- 생성자(constructor)
  			- 메소드(method)
  	
  	- 힙 영역(Heap Area)
  		: 객체와 배열이 생성되는 영역
  		
  	- JVM 스택 영역
  		: 메소드가 호출되면 프레임이 추가(push)
  		  메소드가 종료되면 프레임이 제거(pop)
  
  - 참조타입 변수 간의 ==, != 연산
  	- 동일 객체를 참조하는지, 다른 객체를 참조하는지 알아볼 때 사용
  	- 번지 값의 비교(동일한 번지 값을 갖고 있다면 동일한 객체를 참조하는 것)
  		: ==
  		-> 같으면 true
  		   다르면 false
  		: !=
  		-> 같으면 false
  		   다르면 true
  
  - null과 NullPointerException
  	- 참조타입 변수는 객체를 참조하지 않는다는 뜻으로 null값 가질 수 있음
  		: null로 초기화 된 참조변수도 스택영역에 생성됨
  - 예외(Exception)
  	- 프로그램 실행 도중 발생하는 오류
  		: 사용자의 잘못된 입력으로 발생할 수도 있고, 프로그래머가 코드를 잘못
  		  작성해서 발생할 수도 있음
  	- NullPointException
  		- 참조변수를 사용하면서 가장 많이 발생하는 예외 중 하나
  			: 참조타입 변수가 null인 상태에서 존재하지 않는 객체의
  			  데이터나 메소드 사용할 경우 발생
  				-> 해당 참조변수가 객체를 참조하도록 수정하여 해결	
  - String 타입
	- 문자열은 String 객체로 생성되고 변수가 String 객체를 참조
	- 문자열 리터럴 동일한 경우 같은 String 객체를 공유
	
	- new 연산자
		- 객체 생성 연산자
		- 힙 영역에 새로운 객체를 만들 때 사용
		ex)String name1 = String("이름");
		   String name2 = String("이름");
		   String name3 = new String("이름");
			=> name1 == name2 : true
			   name1 == name3 : false
	
	- 문자열 비교
		- == : 번지 비교
		- .equals() : 문자열 비교
		ex) boolean result = str1.equals(str2);
		                     ----       ------
		                    원본문자열    비교문자열
		                    
  